version: "3.8"

services:
  backend:
    image: dythia102/sales-ai-backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /app
    environment:
      AI_API_KEY: "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"
      APP_TITLE: "Sales AI (Dev)"
      APP_DESCRIPTION: "Sales Rep Intelligence API"
      APP_VERSION: "1.0.0"
      AI_PROVIDER: "openrouter"
      AI_MODEL: "mistralai/mixtral-8x7b-instruct"
      AI_API_BASE: "https://openrouter.ai/api/v1"
      USE_AI: "true"
      FRONTEND_URL: "http://52.74.52.230:3000"
    command: >
      sh -c "
        uvicorn main:app --host 0.0.0.0 --port 8000
      "
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
      placement:
        constraints:
          - node.labels.name == node00
    networks:
      - sales-ai_default

  frontend:
    image: dythia102/sales-ai-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    working_dir: /app
    environment:
      NEXT_PUBLIC_API_URL: "http://52.74.52.230:8000"
    command: >
      sh -c "
        npm run start
      "
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
      placement:
        constraints:
          - node.labels.name == node00
    networks:
      - sales-ai_default

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "3000:3000"
      - "8000:8000"
    depends_on:
      - frontend
      - backend
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
      placement:
        constraints:
          - node.role == manager
    networks:
      - sales-ai_default

networks:
  sales-ai_default:
    driver: overlay
