version: "3.8"

services:
  backend:
    image: dythia102/sales-ai-backend:latest
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./backend:/app
      # - ./backend/.env:/app/.env
    environment:
      APP_TITLE: "Sales AI (Dev)"
      APP_DESCRIPTION: "Sales Rep Intelligence API"
      APP_VERSION: "1.0.0"
      AI_PROVIDER: "openrouter"
      AI_MODEL: "mistralai/mixtral-8x7b-instruct"
      AI_API_BASE: "https://openrouter.ai/api/v1"
      USE_AI: "true"
      FRONTEND_URL: "http://52.74.52.230:3000"
      AI_API_KEY: "xxxxxxxxxxxxxxxx"
    command: >
      sh -c "
        uvicorn main:app --host 0.0.0.0 --port 8000
      "
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
      placement:
        constraints:
          - node.labels.name == node00

  frontend:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      # - ./frontend/.env:/app/.env
      - ./scripts/run-wait-ngrok.sh:/app/run-wait-ngrok.sh
    environment:
      NEXT_PUBLIC_API_URL: "http://52.74.52.230:8000"
    command: >
      sh -c "
        npm install && \
        npm run dev
      "
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
      placement:
        constraints:
          - node.labels.name == node00

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "3000:3000"
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
      placement:
        constraints:
          - node.role == manager
